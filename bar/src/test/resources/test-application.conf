# Reference configuration for a Timetrade queue server without clustering.
timetrade {
  queue-server {

    # This is the port used for internal REST requests.
    internal-rest-api-port = 8081

    # This is the root of public absolute URLs returned by the queue-server.
    # (Most returned URLs are relative, but some e.g., for new feeds, are absolute, and those
    # will use this URL root.)
    #
    # Note that if the queue server sees "$localhost" in this value, it will substitute the local
    # host's IP address in responsed URLs.  This is acceptable for development and integration
    # deployments, where we operate behind the firewall.  But for production, this should be
    # overridden to something like "http://queues.timetrade.com".
    feed-url-base = "http://$localhost"

    persistence {
      # Example of a URL for MS SQL:
      #   "jdbc:jtds:sqlserver://10.192.239.30:1433/QueuingService;user=sa;password=wstinol"
      jdbc-url = "jdbc:h2:mem:myTestDb"

      # Maximum number of database connections to pool
      max-connection-pool-size = 15
    }
    core {
      # The maximum time a client connection (long poll, or event source) may remain un-completed.
      client-timeout = 5 minutes

      # The idle time after which a queue may be deactivated.
      queue-idle-timeout = 1 hour

      # Time to wait when activating a queue.
      queue-activation-timeout = 5 minutes

      # Time to wait when deactivating a queue.
      queue-deactivation-timeout = 1 minutes

      # How long for which a ticket is valid.
      ticket-lifetime = 18 hours

      # Amount of time between when we delete expired tickets.
      period-between-expired-ticket-evictions = 4 minutes

      # Number of actors assigned to the pool for ActiveQueueRegistrar router.
      # Increase if there is a bottleneck.
      active-queue-registrar-pool-size = 1

      # Number of actors assigned to the pool for TicketingActor
      # Increase if there is a bottleneck.
      ticketing-actor-pool-size = 1

      # When running clustered, this specifies how actors' placement is decided.
      # Possible values:
      #    "LocationActorToLeastLoaded"
      #    "LocationActorToOther"
      #    "LocationActorRoundRobin"
      actor-placement-strategy = "LocationActorToLeastLoaded"
    }
  }
}

# spray configuration
spray {

  # time period in which all spray routes must complete their requests
  request-timeout = 120 s

  # This needs to be at least as long as request-timeout above.
  idle-timeout = 125 s
}

spray.can {
  verbose-error-messages = on

  client {
    response-chunk-aggregation-limit = 0
  }

  server {
    verbose-error-messages = on

    # Allow requests this long to complete.
    request-timeout = 120 s

    # This needs to be at least as long as request-timeout above.
    idle-timeout = 125 s

    request-chunk-aggregation-limit = 0
  }
}

akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # This seemed to avoid some OutOfMemoryExceptions thrown during test shutdown.
  log-dead-letters-during-shutdown = false

  logger-startup-timeout = 30 seconds

  # You normally want these uncommented when developing/debugging:
  #
  # This gates what events are even placed on Akka's event bus. So it should be at least as
  # great as the highest level you intend to use in the logback.xml, since events only
  # reach logback after passing through Akka's logging.

  loglevel = DEBUG
}
